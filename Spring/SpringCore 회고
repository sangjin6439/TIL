미션
이번 미션은 계층화를 중점으로 두는 미션이었다. 기존에도 Domain Dto Repository Controller로 나누어 두어 Service 계층만 추가했다. 각 계층에 대한 책임을 고민했다. 계층을 나누는 이유는 각 계층을 분리해서 서로의 의존도를 떨어뜨리고 새로운 기술을 추가할 때 해당 계층의 코드만 변경하면 되는 이점이 있다.

Domain: RDBMS를 사용하므로 서비스에 필요한 테이블을 기준으로 잡았고 제일 기본이 되는 객체에 대한 정보만 구현했다.

Dto: Domain에 대한 정보가 수정, 변경이 되도록 하는 계층이고 필요한 정보만 받게 해서 domain의 노출을 최소화했다.

Repository: 데이터 액세스 계층으로 직접적으로 DB와 연결되는 부분입니다. 이 계층에서는 DB에 대한 정보를 저장, 읽기, 수정, 삭제하는 기능(CRUD)만 수행하도록 구현했다.

Service: 비즈니스 로직이 있는 계층이며 여러 데이터들의 변경과 추가적인 이벤트 로직(Validate, 예외 처리)이 사용되는 계층이다. 데이터가 변경되는 로직과 단순히 읽는 부분의 로직에서 @transaction을 다르게 사용하여 원자성을 보장했고 데이터 변경을 더욱 신경 썼다.

Controller: 프레젠테이션 계층으로 사용자의 요청을 받아들이고 상호작용하는 계층이므로 요청과 응답의 책임을 맡는다.
