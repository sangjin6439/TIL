Projections(필요한 DTO만 조회해서 가져오기) + Open Projections
Closed Projections 과 Open Projections가 있다.
프로퍼티 형식(getter)의 인터페이스를 제공하면, 구현체는 스프링 데이터 JPA가 제공
closed Projections는 아래의 코드와 같이 따로 인터페이스를 만들고 원하는 필드를 뽑아서 만들어 주면 jpa가 해당 필드만 뽑아내는 쿼리를 발생한다.

 public interface UsernameOnly {
     String getUsername();
}

Open Projections는 아래와 같이 SPEL문법을 사용한다. 이렇게 사용하면 DB에서 엔티티를 다 조회하고 다음에 원하는 필드만 따로 계산하기 때문에 최적화가 안된다.

 public interface UsernameOnly {
@Value("#{target.username + ' ' + target.age + ' ' + target.team.name}")
     String getUsername();
}

클래스 기반 Projection은 인터페이스가 아닌 구체적인 DTO 형식도 가능하다.
UsernameOnlyDto클래스 projection으로 쓸 때 gradle로 빌드해야 정상 작동함 intelliJ에서 하면 오류남.. <-쓰지말자..

Native쿼리 -> 가급적 사용 X, 차라리 Projections을 사용하는게 좋음.
