# MySQL 성능 최적화(SQL 튜닝)

왜 성능 최적화를 진행하는가?

 1.동시 사용자 수의 증가

 2.데이터 양의 증가

 3.비효율적인 SQL문 작성

위의 3가지 이유로 성능의 문제가 발생하기 때문에 DB성능 최적화 진행

### DB 성능 개선 방법

- SQL 튜닝
- 캐싱 서버 활용 (Redis 등)
- 레플리케이션 (Master/Slave 구조)
- 샤딩
- 스케일업(pc 스팩 업그레이드)

많은 성능 개선 방법들 중에 SQL튜닝을 먼저 해야하는 이유:
나머지 성능 개선 방법들에는 추가적인 시스템을 구축하고 관리해야하는 금전적, 시간적 비용이 발생한다. 그에 비해 SQL 튜닝은 기존의 시스템의 변경 없이 성능을 개선할 수 있다.
근본적인 문제를 해결하는 방법은 SQL튜닝일 가능성이 높다. SQL 자체가 비효율적으로 작성됐다면 이무리 시스템적으로 성능을 개선한다고 하더라도 한계가 있다.
### MySQL 구조는 왜 파악?

→ 어떤 부분에서 MySQL의 성능을 많이 잡아 먹는지, 어떤 요인이 주로 문제를 일으키는 지 파악할 수 있어야 함. 그렇기 위해 구조를 알아야한다

SQL문 실행 과정

1. 클라이언트가 DB에 SQL 요청을 보낸다.
2. MySQL 엔진에서 옵티마이저가 SQL문을 분석한 뒤 효율적으로 데이터를 가져올 계획을 세움. 테이블 접근 순서, 인덱스 사용 여부, 어떤 인덱스 사용할지 등(옵티 마이저가 세운 계획은 완벽하지 않다. 따라서 SQL 튜닝이 필요함)
3. 옵티마이저가 세운 계획을 바탕으로 스토리지 엔진으로부터 데이터를 가져옴.(DB 성능에 문제가 생기는 대부분의 원인은 스토리지 엔진으로부터 데이터를 가져올 때 발생함. 데이터를 찾기가 어려워서 오래 걸리거나, 가져올 데이터가 너무 많아서 오래 걸림. SQL 튜닝의 핵심은 스토리지 엔진으로부터 되도록이면 데이터를 찾기 쉽게 바꾸고, 적은 데이터를 가져오도록 바꿈)
4. MySQL 엔진에서 정렬, 필터링 등의 마지막 처리를 한 뒤에 클라이언트에게 SQL 결과를 응답함
### SQL 튜닝의 핵심

1. 스토리지 엔진에서 데이터를 찾기 쉽게 바꿈
2. 스토리지 엔진으로부터 가져오는 데이터의 양 줄이기
